import express from "express";
import { pool } from "../../db.js";

const router = express.Router();

// üîπ L·∫•y danh s√°ch d·ªãch v·ª• ƒëi k√®m c·ªßa t·∫•t c·∫£ tour
router.get("/", async (req, res) => {
  try {
    const [rows] = await pool.query(`
      SELECT ts.id, ts.tour_id, t.title AS tour_title,
             ts.service_id, s.name AS service_name, s.type, 
             ts.qty, ts.note
      FROM tour_services ts
      JOIN tours t ON ts.tour_id = t.id
      JOIN services s ON ts.service_id = s.id
      ORDER BY ts.id DESC
    `);
    res.json(rows);
  } catch (err) {
    console.error("‚ùå L·ªói l·∫•y danh s√°ch tour_services:", err);
    res.status(500).json({ message: "Server error" });
  }
});

// üîπ L·∫•y danh s√°ch d·ªãch v·ª• c·ªßa 1 tour c·ª• th·ªÉ
router.get("/tour/:tour_id", async (req, res) => {
  const { tour_id } = req.params;
  try {
    const [rows] = await pool.query(`
      SELECT ts.id, ts.service_id, s.name AS service_name, s.type, ts.qty, ts.note
      FROM tour_services ts
      JOIN services s ON ts.service_id = s.id
      WHERE ts.tour_id = ?
    `, [tour_id]);
    res.json(rows);
  } catch (err) {
    console.error("‚ùå L·ªói l·∫•y d·ªãch v·ª• c·ªßa tour:", err);
    res.status(500).json({ message: "Server error" });
  }
});

// üîπ Th√™m d·ªãch v·ª• v√†o tour
router.post("/add-tour-service", async (req, res) => {
  const { tour_id, service_id, qty, note } = req.body;
  if (!tour_id || !service_id) return res.status(400).json({ message: "Thi·∫øu tour_id ho·∫∑c service_id" });

  try {
    const [result] = await pool.query(`
      INSERT INTO tour_services (tour_id, service_id, qty, note)
      VALUES (?, ?, ?, ?)
      ON DUPLICATE KEY UPDATE qty = VALUES(qty), note = VALUES(note)
    `, [tour_id, service_id, qty || 1, note || null]);

    res.status(201).json({ id: result.insertId, tour_id, service_id });
  } catch (err) {
    console.error("‚ùå L·ªói th√™m tour_service:", err);
    res.status(500).json({ message: "Kh√¥ng th·ªÉ th√™m d·ªãch v·ª• cho tour" });
  }
});

// üîπ C·∫≠p nh·∫≠t d·ªãch v·ª• tour
router.put("/:id", async (req, res) => {
  const { id } = req.params;
  const { qty, note } = req.body;
  try {
    await pool.query("UPDATE tour_services SET qty=?, note=? WHERE id=?", [qty, note, id]);
    res.json({ message: "C·∫≠p nh·∫≠t th√†nh c√¥ng" });
  } catch (err) {
    console.error("‚ùå L·ªói c·∫≠p nh·∫≠t tour_service:", err);
    res.status(500).json({ message: "L·ªói server" });
  }
});

// üîπ X√≥a d·ªãch v·ª• kh·ªèi tour
router.delete("/:id", async (req, res) => {
  const { id } = req.params;
  try {
    await pool.query("DELETE FROM tour_services WHERE id=?", [id]);
    res.json({ message: "ƒê√£ x√≥a d·ªãch v·ª• kh·ªèi tour" });
  } catch (err) {
    console.error("‚ùå L·ªói x√≥a tour_service:", err);
    res.status(500).json({ message: "L·ªói server" });
  }
});

export default router;
