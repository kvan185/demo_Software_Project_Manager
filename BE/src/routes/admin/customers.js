import express from "express";
import { pool } from "../../db.js";

const router = express.Router();

// üîπ L·∫•y danh s√°ch kh√°ch h√†ng
router.get("/", async (req, res) => {
  try {
    const [rows] = await pool.query(
      `SELECT c.id, c.full_name, c.phone, c.gender, c.birthday, 
              c.address, c.note, c.created_at, c.updated_at, 
              u.email AS user_email 
       FROM customers c
       LEFT JOIN users u ON c.user_id = u.id
       ORDER BY c.id DESC`
    );
    res.json(rows);
  } catch (err) {
    console.error("‚ùå L·ªói l·∫•y danh s√°ch kh√°ch h√†ng:", err);
    res.status(500).json({ message: "Server error" });
  }
});

// üîπ Th√™m kh√°ch h√†ng m·ªõi
router.post("/add-customer", async (req, res) => {
  const { user_id, full_name, phone, birthday, gender, address, note } = req.body;
  if (!full_name) return res.status(400).json({ message: "T√™n kh√°ch h√†ng l√† b·∫Øt bu·ªôc" });

  try {
    const [result] = await pool.query(
      `INSERT INTO customers (user_id, full_name, phone, birthday, gender, address, note)
       VALUES (?, ?, ?, ?, ?, ?, ?)`,
      [user_id || null, full_name, phone || null, birthday || null, gender || "other", address || null, note || null]
    );
    res.status(201).json({ id: result.insertId, full_name });
  } catch (err) {
    console.error("‚ùå L·ªói th√™m kh√°ch h√†ng:", err);
    res.status(500).json({ message: "Kh√¥ng th·ªÉ th√™m kh√°ch h√†ng" });
  }
});

// üîπ L·∫•y chi ti·∫øt kh√°ch h√†ng theo ID
router.get("/:id", async (req, res) => {
  const { id } = req.params;
  try {
    const [rows] = await pool.query(
      `SELECT c.*, u.email AS user_email
       FROM customers c
       LEFT JOIN users u ON c.user_id = u.id
       WHERE c.id = ?`,
      [id]
    );
    if (rows.length === 0)
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng" });
    res.json(rows[0]);
  } catch (err) {
    console.error("‚ùå L·ªói l·∫•y chi ti·∫øt kh√°ch h√†ng:", err);
    res.status(500).json({ message: "Server error" });
  }
});

// üîπ C·∫≠p nh·∫≠t th√¥ng tin kh√°ch h√†ng
router.put("/:id", async (req, res) => {
  const { id } = req.params;
  const { user_id, full_name, phone, birthday, gender, address, note } = req.body;

  try {
    await pool.query(
      `UPDATE customers 
       SET user_id=?, full_name=?, phone=?, birthday=?, gender=?, address=?, note=? 
       WHERE id=?`,
      [user_id || null, full_name, phone, birthday, gender, address, note, id]
    );
    res.json({ message: "C·∫≠p nh·∫≠t th√†nh c√¥ng" });
  } catch (err) {
    console.error("‚ùå L·ªói c·∫≠p nh·∫≠t kh√°ch h√†ng:", err);
    res.status(500).json({ message: "L·ªói server" });
  }
});

// üîπ X√≥a kh√°ch h√†ng
router.delete("/:id", async (req, res) => {
  const { id } = req.params;
  try {
    await pool.query("DELETE FROM customers WHERE id = ?", [id]);
    res.json({ message: "ƒê√£ x√≥a kh√°ch h√†ng" });
  } catch (err) {
    console.error("‚ùå L·ªói x√≥a kh√°ch h√†ng:", err);
    res.status(500).json({ message: "L·ªói server" });
  }
});

export default router;
